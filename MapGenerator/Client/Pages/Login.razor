@page "/Login"
@using Client.Services
@using Shared.DTO
@using Shared.Response.SuccessRespond

@inject NavigationManager NavigationManager
@inject AuthService AuthService
@inject ILocalStorageService LocalStorageService
@inject AuthenticationStateProvider AuthenticationStateProvider



<section class="vh-100">
  <div class="container py-5 h-100">
    <div class="row d-flex align-items-center justify-content-center h-100">
        
        <div class="card bg-nice-black text-white" style="border-radius: 1rem;">
            <div class="card-body p-5 ">
                
                    <EditForm Model="LoginDTO" OnValidSubmit="HandleLogin">
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                        <!-- Email input -->
                        <div class="mb-4 ">
                            <InputText @bind-Value="LoginDTO.Email" id="email" class="form-control" placeholder="E-mail"></InputText>
                        </div>

                        <div class="mb-4">
                            <InputText @bind-Value="LoginDTO.Password" id="password" type="password" class="form-control" placeholder="Hasło"></InputText>
                        </div>
                        <div class="text-center d-flex justify-content-center align-items-center"> 
                            @if (logging)
                            {
                                <div class="loader"></div>
                            }
                            @if (!string.IsNullOrEmpty(message))
                            {
                                
                                <div class="card  bg bg-danger flex-fill bg-opacity-50 text-white d-flex flex-row align-items-center justify-content-center" style="border-radius: 1rem;">
                                   
                                  
                                    <p class="mb-0">@message</p>
                                   <div  style="width:10px"></div>
                                   <a class="bi bi-x " onclick="@ResetMassage" style="font-size: 24px;"></a>
                               
                                </div>
                            }
                            </div>
               
              
                        <button type="submit"  class="btn btn-primary w-100 my-4 mb-2 ">Zaloguj</button>


                    </EditForm>
      
            </div>
        </div>
        
    </div>
  </div>
</section>


@code {

    private LoginDto LoginDTO = new LoginDto();
    private string message = string.Empty;
    private bool logging = false;

    private async Task HandleLogin()
    {
        logging = true;
        message = string.Empty;
        var result = await AuthService.Login(LoginDTO);
        if (result == null)
        {
            logging = false;
            message = "Nie poprawne dane logowania";
        }
        else
        {
            await LocalStorageService.SetItemAsync("authToken", result);
            await AuthenticationStateProvider.GetAuthenticationStateAsync();
            logging = false;
            NavigationManager.NavigateTo("/");
        }
    }

    private void ResetMassage()
    {
        message = string.Empty;
    }


}